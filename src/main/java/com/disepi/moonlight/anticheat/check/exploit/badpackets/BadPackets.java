package com.disepi.moonlight.anticheat.check.exploit.badpackets;

import cn.nukkit.Player;
import cn.nukkit.event.entity.EntityDamageByEntityEvent;
import cn.nukkit.network.protocol.MovePlayerPacket;
import com.disepi.moonlight.anticheat.check.Check;
import com.disepi.moonlight.anticheat.player.PlayerData;

public class BadPackets extends Check {
    // Constructor
    public BadPackets() {
        super("BadPacketsA", "Invalid packet received", 0);
    }

    // This checks for invalid packets being sent to the server that are not possible at all in vanilla gameplay.

    public void check(MovePlayerPacket e, PlayerData d, Player p) {
        if (e.pitch > 90) // Pitch should never be above 90
            fail(p, "pitch=" + e.pitch + ", type=INVALID_PITCH"); // Fail check
        if (e.x == d.lastX && e.y == d.lastY && e.z == d.lastZ && e.pitch == d.lastPitch && e.yaw == d.lastYaw) // Duplicate invalid packet
            fail(p, "type=DUPLICATE_PACKET"); // Fail check
    }

    public void check(EntityDamageByEntityEvent e, PlayerData d, Player p) {
        if (e.getDamager() == e.getEntity()) // Entity attacked itself
        {
            e.setCancelled(true);
            fail(p, "type=SELF_HIT"); // Fail check
        }
    }

}
