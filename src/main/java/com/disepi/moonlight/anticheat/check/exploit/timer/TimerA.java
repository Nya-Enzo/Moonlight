package com.disepi.moonlight.anticheat.check.exploit.timer;

import cn.nukkit.Player;
import cn.nukkit.network.protocol.MovePlayerPacket;
import com.disepi.moonlight.anticheat.check.Check;
import com.disepi.moonlight.anticheat.player.PlayerData;

public class TimerA extends Check {
    // Constructor
    public TimerA() {
        super("Timer", "Too many move packets received", 8);
    }

    // This checks for extra MovePlayerPackets being sent to the server by using a "balance".
    // Keep in mind every 50ms is considered a game tick.

    public void check(MovePlayerPacket e, PlayerData d, Player p) {
        long time = System.currentTimeMillis(); // Get current time
        long lastTime = d.lastTime != 0 ? d.lastTime : time - 200; // Get last send time
        d.lastTime = time; // Set last send time
        if (d.balance < -100) d.balance = -100; // If our balance is too low then this check will not work properly
        d.balance += 50.0 + -(time - lastTime); // Add 50ms to our balance and then remove the difference between the last send & current send
        if (d.balance >= 10.0) { // Check if the balance value is abnormal
            this.fail(p, "balance=" + d.balance); // We have failed the check
            d.balance = 0; // Reset our balance
        }
    }

}
